<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Faucet Networking</name>
  <version>1.5.0</version>
  <author>Medo</author>
  <date>01.09.2013</date>
  <license>ISC license</license>
  <description>Provides basic networking functionality</description>
  <helpfile></helpfile>
  <installdir></installdir>
  <files>
    <file>
      <filename>faucetNetworking.dll</filename>
      <origname>D:\Eigene Dateien\Programmierung\Platlib Workspace\Faucet DLL\Release\libFaucet DLL.dll</origname>
      <init>dllStartup</init>
      <final>dllShutdown</final>
      <kind>1</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>append_file_to_buffer</name>
          <externalName>append_file_to_buffer</externalName>
          <kind>12</kind>
          <help>append_file_to_buffer(dest, filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>bit_get</name>
          <externalName>bit_get</externalName>
          <kind>12</kind>
          <help>bit_get(value,bitnum)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>bit_set</name>
          <externalName>bit_set</externalName>
          <kind>12</kind>
          <help>bit_set(value,bitnum,bitval)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_bytes_left</name>
          <externalName>buffer_bytes_left</externalName>
          <kind>12</kind>
          <help>buffer_bytes_left(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_clear</name>
          <externalName>buffer_clear</externalName>
          <kind>12</kind>
          <help>buffer_clear(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_create</name>
          <externalName>buffer_create</externalName>
          <kind>12</kind>
          <help>buffer_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>buffer_destroy</name>
          <externalName>buffer_destroy</externalName>
          <kind>12</kind>
          <help>buffer_destroy(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_set_readpos</name>
          <externalName>buffer_set_readpos</externalName>
          <kind>12</kind>
          <help>buffer_set_readpos(source, pos)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buffer_size</name>
          <externalName>buffer_size</externalName>
          <kind>12</kind>
          <help>buffer_size(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>build_ubyte</name>
          <externalName>build_ubyte</externalName>
          <kind>12</kind>
          <help>build_ubyte(bit7,bit6,bit5,bit4,bit3,bit2,bit1,bit0)</help>
          <returnType>2</returnType>
          <argCount>8</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>debug_handles</name>
          <externalName>debug_handles</externalName>
          <kind>12</kind>
          <help>debug_handles()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>dllShutdown</name>
          <externalName>dllShutdown</externalName>
          <kind>12</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>dllStartup</name>
          <externalName>dllStartup</externalName>
          <kind>12</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>ipv4_lookup_create</name>
          <externalName>ipv4_lookup_create</externalName>
          <kind>12</kind>
          <help>ipv4_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>ipv6_lookup_create</name>
          <externalName>ipv6_lookup_create</externalName>
          <kind>12</kind>
          <help>ipv6_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>ip_is_v4</name>
          <externalName>ip_is_v4</externalName>
          <kind>12</kind>
          <help>ip_is_v4(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>ip_is_v6</name>
          <externalName>ip_is_v6</externalName>
          <kind>12</kind>
          <help>ip_is_v6(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>ip_lookup_create</name>
          <externalName>ip_lookup_create</externalName>
          <kind>12</kind>
          <help>ip_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>ip_lookup_destroy</name>
          <externalName>ip_lookup_destroy</externalName>
          <kind>12</kind>
          <help>ip_lookup_destroy(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>ip_lookup_has_next</name>
          <externalName>ip_lookup_has_next</externalName>
          <kind>12</kind>
          <help>ip_lookup_has_next(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>ip_lookup_next_result</name>
          <externalName>ip_lookup_next_result</externalName>
          <kind>12</kind>
          <help>ip_lookup_next_result(lookup)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>ip_lookup_ready</name>
          <externalName>ip_lookup_ready</externalName>
          <kind>12</kind>
          <help>ip_lookup_ready(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>mac_addrs</name>
          <externalName>mac_addrs</externalName>
          <kind>12</kind>
          <help>mac_addrs()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>read_byte</name>
          <externalName>read_byte</externalName>
          <kind>12</kind>
          <help>read_byte(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_double</name>
          <externalName>read_double</externalName>
          <kind>12</kind>
          <help>read_double(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_float</name>
          <externalName>read_float</externalName>
          <kind>12</kind>
          <help>read_float(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_int</name>
          <externalName>read_int</externalName>
          <kind>12</kind>
          <help>read_int(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_short</name>
          <externalName>read_short</externalName>
          <kind>12</kind>
          <help>read_short(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_string</name>
          <externalName>read_string</externalName>
          <kind>12</kind>
          <help>read_string(source, length)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_ubyte</name>
          <externalName>read_ubyte</externalName>
          <kind>12</kind>
          <help>read_ubyte(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_uint</name>
          <externalName>read_uint</externalName>
          <kind>12</kind>
          <help>read_uint(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>read_ushort</name>
          <externalName>read_ushort</externalName>
          <kind>12</kind>
          <help>read_ushort(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>set_little_endian</name>
          <externalName>set_little_endian</externalName>
          <kind>12</kind>
          <help>set_little_endian(buffer|socket, bool)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>set_little_endian_global</name>
          <externalName>set_little_endian_global</externalName>
          <kind>12</kind>
          <help>set_little_endian_global(bool)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_accept</name>
          <externalName>socket_accept</externalName>
          <kind>12</kind>
          <help>socket_accept(acceptor)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_connecting</name>
          <externalName>socket_connecting</externalName>
          <kind>12</kind>
          <help>socket_connecting(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_destroy</name>
          <externalName>socket_destroy</externalName>
          <kind>12</kind>
          <help>socket_destroy(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_destroy_abortive</name>
          <externalName>socket_destroy_abortive</externalName>
          <kind>12</kind>
          <help>socket_destroy_abortive(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_error</name>
          <externalName>socket_error</externalName>
          <kind>12</kind>
          <help>socket_error(socket)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_handle_io</name>
          <externalName>socket_handle_io</externalName>
          <kind>12</kind>
          <help>socket_handle_io()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>socket_has_error</name>
          <externalName>socket_has_error</externalName>
          <kind>12</kind>
          <help>socket_has_error(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_local_port</name>
          <externalName>socket_local_port</externalName>
          <kind>12</kind>
          <help>socket_local_port(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_receivebuffer_size</name>
          <externalName>socket_receivebuffer_size</externalName>
          <kind>12</kind>
          <help>socket_receivebuffer_size(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_remote_ip</name>
          <externalName>socket_remote_ip</externalName>
          <kind>12</kind>
          <help>socket_remote_ip(socket)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_remote_port</name>
          <externalName>socket_remote_port</externalName>
          <kind>12</kind>
          <help>socket_remote_port(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_send</name>
          <externalName>socket_send</externalName>
          <kind>12</kind>
          <help>socket_send(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_sendbuffer_limit</name>
          <externalName>socket_sendbuffer_limit</externalName>
          <kind>12</kind>
          <help>socket_sendbuffer_limit(socket, limit)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socket_sendbuffer_size</name>
          <externalName>socket_sendbuffer_size</externalName>
          <kind>12</kind>
          <help>socket_sendbuffer_size(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcp_connect</name>
          <externalName>tcp_connect</externalName>
          <kind>12</kind>
          <help>tcp_connect(host, port)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcp_eof</name>
          <externalName>tcp_eof</externalName>
          <kind>12</kind>
          <help>tcp_eof(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcp_listen</name>
          <externalName>tcp_listen</externalName>
          <kind>12</kind>
          <help>tcp_listen(port)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcp_receive</name>
          <externalName>tcp_receive</externalName>
          <kind>12</kind>
          <help>tcp_receive(tcpSocket, numBytes)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcp_receive_available</name>
          <externalName>tcp_receive_available</externalName>
          <kind>12</kind>
          <help>tcp_receive_available(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udp_bind</name>
          <externalName>udp_bind</externalName>
          <kind>12</kind>
          <help>udp_bind(port)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udp_broadcast</name>
          <externalName>udp_broadcast</externalName>
          <kind>12</kind>
          <help>udp_broadcast(udpSocket|buffer, port)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udp_receive</name>
          <externalName>udp_receive</externalName>
          <kind>12</kind>
          <help>udp_receive(udpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udp_send</name>
          <externalName>udp_send</externalName>
          <kind>12</kind>
          <help>udp_send(udpSocket|buffer, host, port)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_buffer</name>
          <externalName>write_buffer</externalName>
          <kind>12</kind>
          <help>write_buffer(dest, source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_buffer_part</name>
          <externalName>write_buffer_part</externalName>
          <kind>12</kind>
          <help>write_buffer_part(dest, source, bytes)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_buffer_to_file</name>
          <externalName>write_buffer_to_file</externalName>
          <kind>12</kind>
          <help>write_buffer_to_file(source, filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>write_byte</name>
          <externalName>write_byte</externalName>
          <kind>12</kind>
          <help>write_byte(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_double</name>
          <externalName>write_double</externalName>
          <kind>12</kind>
          <help>write_double(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_float</name>
          <externalName>write_float</externalName>
          <kind>12</kind>
          <help>write_float(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_int</name>
          <externalName>write_int</externalName>
          <kind>12</kind>
          <help>write_int(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_short</name>
          <externalName>write_short</externalName>
          <kind>12</kind>
          <help>write_short(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_string</name>
          <externalName>write_string</externalName>
          <kind>12</kind>
          <help>write_string(dest, string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>write_ubyte</name>
          <externalName>write_ubyte</externalName>
          <kind>12</kind>
          <help>write_ubyte(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_uint</name>
          <externalName>write_uint</externalName>
          <kind>12</kind>
          <help>write_uint(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>write_ushort</name>
          <externalName>write_ushort</externalName>
          <kind>12</kind>
          <help>write_ushort(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
